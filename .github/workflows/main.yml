name: Deploy DynamoDB CRUD API

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  push:
    branches: [ main ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "deploy"
  deploy:
    name: deploy

    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: ['20.x']
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v4

    # - uses: actions/cache@v4
    #   with:
    #     path: '**/node_modules'
    #     key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}

    - name: 'Create env file'
      run: |
        touch .env
        echo API_ENDPOINT="https://xxx.execute-api.us-west-2.amazonaws.com" >> .env
        echo AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} >> .env
        echo AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_ACCESS_KEY_ID }} >> .env
        echo DB_PREFIX="staging" >> .env
        echo NODE_ENV="staging" >> .env
        cat .env

    - name: Install dependencies
      run: npm install

    - name: serverless deploy
      uses: serverless/github-action@master
      with:
        args: deploy --stage staging
      env:
        # SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}
        # or if using AWS creds directly
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}